% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DFA_code.R
\name{dfa_analytic}
\alias{dfa_analytic}
\title{This function computes MSE (mean-square) DFA-solutions as well as customized filters: it replicates the function dfa_ms if lambda=eta=0 and if i1=i2=F. It can solve univariate signal extraction problems only. It can handle constraints. Regularization is not possible.}
\usage{
dfa_analytic(L, lambda, periodogram, Lag, Gamma, eta, cutoff, i1, i2)
}
\arguments{
\item{L}{Filter length}

\item{lambda}{Customization parameter: Timeliness is emphasized in the ATS-trilemma if lambda>0}

\item{periodogram}{Periodogram (as generated by function per)}

\item{Lag}{Backcast (Lag>0), Nowcast (Lag=0) or Forecast (Lag<0)}

\item{Gamma}{Generic target specification: typically symmetric Lowpass (trend) or Bandpass (cycle) filters. Highpass and anticipative allpass (forecast) can be specified too.}

\item{eta}{Customization parameter: Smoothness is emphasized in the ATS-trilemma if eta>0}

\item{cutoff}{Specifies start-frequency in stopband from which Smoothness is emphasized (corresponds typically to the cutoff of the lowpass target). Is not used if eta=0.}

\item{i1}{Boolean. If T a first-order filter constraint in frequency zero is obtained: amplitude of real-time filter must match weight_constraint (handles integration order one)}

\item{i2}{Boolean. If T a second-order filter constraint in frequency zero is obtained: time-shift of real-time filter must match target (together with i1 handles integration order two)}
}
\value{
b optimal filter coefficients: MSE-design if lambda=eta=0

trffkt Complex transfer function of optimal (univariate) filter
}
\description{
This function computes MSE (mean-square) DFA-solutions as well as customized filters: it replicates the function dfa_ms if lambda=eta=0 and if i1=i2=F. It can solve univariate signal extraction problems only. It can handle constraints. Regularization is not possible.
}
